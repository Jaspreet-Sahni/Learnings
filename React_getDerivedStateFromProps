import React from "react";
import ReactDOM from "react-dom";

import "./styles.css";

class App extends React.Component {
  constructor(props) {
    super(props);
    this.state = {
      firstname: "Ram"
    };
  }

  
  onChange = e => {
    this.setState({ [e.target.name]: e.target.value });
  };
  render() {
    // console.log('abc')
    return (
      <div className="App">
        <h1>Hello CodeSandbox</h1>
        <h2>Start editing to see some magic happen!</h2>
        <input type="text" onChange={this.onChange} name="firstname" />
        <Hello firstname={this.state.firstname} />
      </div>
    );
  }
}

class Hello extends React.Component {
  constructor(props) {
    super(props);
    console.log('sssss')
    this.state ={
      firstnameChild: this.props.firstname, 
    }
  }

  /* in getDerivedStateFromProps setState will only happen 
  like the below return but we cannot use this keyword.
  To Use this you need to use componentDidUpdate
  
  * Only Problem get to perform call on stateUpdate 
  you need to do that in componentDidUpdate

  */
  static getDerivedStateFromProps(nextProps, prevState) {
    console.log("nextProps hello", nextProps);
   console.log("prevState hello", prevState);
    if (prevState !== null && nextProps.firstname !== prevState.firstnameChild ) {
      return {
        firstnameChild: nextProps.firstname
      };
    }
    return null;
  }

  // componentDidUpdate(prevProps, prevState) {
  //   console.log('didUpdate')
  //   console.log("inside this.props", this.props);
  //     console.log("inside prevProps", prevProps);
  //     console.log("inside prevState", prevState);
  //     console.log("inside state", this.state);
  //     /*way1*/
  //   if (this.props.firstname !== prevProps.firstname) {
  //     console.log("inside this.props if", this.props);
  //     console.log("inside prevProps if", prevProps);
  //   }
  // }
  render() {
    return (
      <div className="App">
        <h1>Hello CodeSandbox</h1>
        
        {this.state.firstnameChild}
        <h2>Start editing to see some magic happen!</h2>
      </div>
    );
  }
}

const rootElement = document.getElementById("root");
ReactDOM.render(<App />, rootElement);
